#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
head(data_exp3)
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","training"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#gender
gender <- data_exp3 %>%
group_by(gender, Age)%>%
distinct(sub_id)%>%
summarise(n = n())
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","training"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#gender
gender <- data %>%
group_by(gender, Age)%>%
distinct(sub_id)%>%
summarise(n = n())
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","training"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#gender
gender <- data %>%
group_by(gender, Age)%>%
distinct(sub_id)%>%
summarise(n = n())
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","gender"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#gender
gender <- data %>%
group_by(gender, Age)%>%
distinct(sub_id)%>%
summarise(n = n())
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","gender"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#gender
gender <- data %>%
group_by(gender, Age)%>%
distinct(sub_ID)%>%
summarise(n = n())
View(gender)
d2 <- read.csv("../data/implicatures_scalarOnly_data.csv")
data_exp2=melt.data.frame(d2,c("Subj_ID","age","agegroup","gender"),c("carrots", "hats", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies",
"carrots_selectionType", "hats_selectionType", "cookies_selectionType", "trains_selectionType", "cats_selectionType", "purses_selectionType",  "keys_selectionType", "shirts_selectionType", "breads_selectionType", "horses_selectionType", "bears_selectionType", "frogs_selectionType", "plates_selectionType", "books_selectionType", "elephants_selectionType", "lamps_selectionType", "bananas_selectionType", "butterflies_selectionType",
"carrots_type", "hats_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
data <- data_exp2[1:918,]
data$selectionType <- data_exp2$value[919:1836]
data$type <- data_exp2$value[1837:2754]
names(data)[5] <- "item"
names(data)[6] <- "correct"
data_exp2 <- data
attach(data_exp2)
data_exp2$trial_type[type == "some"] <- "implicature"
data_exp2$trial_type[type != "some"] <- "control"
detach(data_exp2)
#rename agegroups
data_exp2$agegroup %<>%
str_replace("3.0--3.5", "3-3.5 years")%>%
str_replace("3.5--4.0", "3.5-4 years")%>%
str_replace("4.0--4.5", "4-4.5 years")%>%
str_replace("4.5--5.0", "4.5-5 years")
data_exp2 %<>%
rename(Age = agegroup)
# data_exp2 %<>%
#   filter(Subj_ID != "", correct != "NA") %>%
#   mutate(agesplit = cut(age, breaks=c(3, 3.5, 4, 4.5, 5)),
#          agesplit = factor(agesplit,
#                            labels=c("3-3.5 years", "3.5-4 years", "4-4.5 years", "4.5-5 years"))) %>%
#   filter(agesplit != "NA")
#renaming for graphs
data_exp2$type <- factor(data_exp2$type,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
data_exp2$selectionType <- factor(data_exp2$selectionType,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
# data_exp2$trial_type <- factor(data_exp2$trial_tyçpe,
#                                levels = c ("control", "implicature"),
#                                labels = c("Control", "Implicature"))
# data_exp2 %<>%
#   rename(Age = agesplit)
gender <- data_exp2 %>%
group_by(gender, Age)%>%
distinct(Subj_ID)%>%
summarise(n= n())
View(gender)
install.packages("packrat")
setwd("~/Documents/Projects/SI_tablet/paper/SI_tablet")
#knitr setup
#cache chunks to run more quickly; if you make any changes to the df however, reknit with cache = FALSE to incorporate those changes
rm(list=ls())
knitr::opts_chunk$set(fig.width=3, fig.height=3, fig.crop = F, fig.pos = "tb", fig.path='figs/',
echo=F, warning=F, cache=TRUE, message=F, sanitize = T)
#load necessary libraries
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(reshape)
library(lme4)
library(dplyr)
library(stringr)
library(tidyr)
library(directlabels)
library(magrittr)
library(RCurl)
library(langcog)
library(diptest)
library(RWiener)
theme_set(theme_bw())
#load main dataframe
df <- read.csv("tmp_si.csv")
num_english <- df %>%
filter(english <= 0.75)%>%
select(sub_id)%>%
distinct()%>%
summarise(n = n())
View(num_english)
num_subjects <- df %>%
select(sub_id)%>%
distinct()
View(num_subjects)
df %<>%
dplyr::mutate(age = as.numeric(age))%>%
dplyr::mutate(resp = factor(correct, levels=c("Y","N"), labels=c("upper","lower")),
q = rt/1000)%>% #factoring responses for RT density analyses
dplyr::filter(selection_type != "someall" &
selection_type != "allall" &
selection_type != "allallall" &
selection_type != "allsome" &
selection_type != "somesome", na.rm=TRUE) %>% #this is filtering out the strange repeats
dplyr::filter(english >= 0.75, na.rm=TRUE) %>% # excluding less than or equal to 75% english exposure
dplyr::filter(english != "NA", na.rm=TRUE)%>% #avoiding the missing value that snuck back in
dplyr::mutate(age_round = round(age, digits = 2))%>% #for easier grouping
dplyr::mutate(agesplit = cut(age_round, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>% #for better-looking graphs
dplyr::filter(agesplit != "NA", na.rm = TRUE) #just in case any NAs popped up
df$correct %<>%
str_replace("Y", 1)%>%
str_replace("N", 0)
df$trial_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
df$selection_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
df1 <-  subset(df, sub_id != "11716_14" & sub_id != "11316_2"
& sub_id != "121815_7" & sub_id != "1616_6"
& sub_id != "TM001" & sub_id != "TM003"
& sub_id != "TM004" & sub_id != "12416_9"
& sub_id!= "TM011") #excluded due to consent, low number of trials, and parental interference
df <- df1
#for figuring out percentage of trials lost due to RT exclusion
pre_cut <- df
df$clean.rt <- df$rt
df$clean.rt[df$rt > 15000] <- NA
mlog <- mean(log(df$clean.rt), na.rm=TRUE)
sdlog <- sd(log(df$clean.rt), na.rm=TRUE)
#Assign "NAs" to clean rts 3 sds outside of log of mean rt
df$clean.rt[log(df$clean.rt) > mlog + 3*sdlog |
log(df$clean.rt) < mlog - 3*sdlog] <- NA
#how much data do we lose in this data cleaning?
outlier <- as.numeric(sum(is.na(df$clean.rt) == TRUE))
total_loss <- outlier
percentage <- as.numeric((total_loss/nrow(df))*100)
num_gender <- df%>%
select(sub_id, sex)%>%
distinct()%>%
group_by(sex)%>%
summarise(n=n())
View(num_gender)
ms.acc <- df %>%
group_by(sub_id, trial_type) %>%
multi_boot_standard("correct", na.rm=TRUE)%>%
select(-ci_lower, -ci_upper)%>%
spread(trial_type, mean)%>%
filter(Some >= .75)
warnings()
str(df)
df %<>%
dplyr::mutate(correct = as.integer(correct))
ms.acc <- df %>%
group_by(sub_id, trial_type) %>%
multi_boot_standard("correct", na.rm=TRUE)%>%
select(-ci_lower, -ci_upper)%>%
spread(trial_type, mean)%>%
filter(Some >= .75)
View(ms.acc)
ms.check <- df %>%
filter(accuracy == "high")%>%
distinct(sub_id)
View(ms.check)
ms.check <- df %>%
filter(accuracy == "high")%>%
distinct(sub_id)%>%
select(sub_id)
View(ms.check)
View(ms.check)
x <- ms.check[order(sub_id),]
x <- ms.check[order(ms.check$sub_id),]
ms.check <- df %>%
filter(accuracy == "high")%>%
distinct(sub_id)%>%
select(sub_id)%>%
arrange(sub_id)
View(ms.check)
install.packages("compare")
ms.acc <- df %>%
group_by(sub_id, trial_type) %>%
multi_boot_standard("correct", na.rm=TRUE)%>%
select(-ci_lower, -ci_upper)%>%
spread(trial_type, mean)%>%
filter(Some >= .75)%>%
arrange(sub_id)
library(compare)
?compare
comparison <- compare(ms.acc$sub_id, ms.check$sub_id, allowAll = TRUE)
head(comparison)
comparison$tM
x <- anti_join(ms.check$sub_id,ms.acc$sub_id)
