#For easier to read graph
df$resp1 <- df$resp %>%
str_replace("lower", "Incorrect")%>%
str_replace("upper", "Correct")
#Stats for median lines
rt_stats <- df %>%
group_by(agesplit, trial_type, resp1)%>%
summarise(mean=mean(rt), median = median(rt))%>%
mutate(m = median/1000)
m_upper <- rt_stats %>%
filter(resp1 == "Correct")
m_lower <- rt_stats %>%
filter(resp1 == "Incorrect")
#for easier to read graph
df$resp1 <- factor(df$resp1, levels=c("Incorrect", "Correct"))
# quartz()
ggplot(df, aes(x=q)) +
geom_density(aes(weight = sum(resp1=="Correct")/length(resp1), fill = resp1), alpha=0.3) +
facet_grid(agesplit ~ trial_type) +
#   geom_vline(data = m_upper, aes(xintercept = m), col = "blue", lty = 2) +
#   geom_vline(data = m_lower, aes(xintercept = m), col = "red", lty = 2) +
scale_fill_solarized(name = "Response") +
xlab("Response time (s)") +
ylab("Density of responses") +
xlim(c(0,10)) +
theme_bw(base_size = 7) +
theme(axis.title.x = element_text(size=7),
axis.title.y  = element_text(size=7),
legend.key.size=unit(.3, "cm"),
legend.title=element_text(size=5.5),
legend.text=element_text(size=5))
lm <- summary(glmer(correct ~ age * trial_type +
(trial_type | sub_id),
family = "binomial", data = df))
t_tests <- aggregate(correct ~ trial_type + agesplit +  sub_id, data=df, mean)
fives_somenone <- t.test(subset(t_tests, agesplit=="5+ years" & trial_type=="None")$correct, subset(t_tests, agesplit=="4-4.5 years" & trial_type=="None")$correct)
t.test(subset(t_tests, agesplit=="5+ years" & trial_type=="None")$correct, subset(t_tests, agesplit=="4-4.5 years" & trial_type=="None")$correct)
t.test(subset(t_tests, agesplit=="5+ years" & trial_type=="None")$correct, subset(t_tests, agesplit=="4-4.5 years" & trial_type=="Some")$correct)
t.test(subset(t_tests, agesplit=="5+ years" & trial_type=="Some")$correct, subset(t_tests, agesplit=="4-4.5 years" & trial_type=="None")$correct)
t.test(subset(t_tests, agesplit=="5+ years" & trial_type=="None")$correct, subset(t_tests, agesplit=="5+ years" & trial_type=="Some")$correct)
trialtypes = c("All", "Some", "None")
#create dataframe
sub.pars <- data.frame(Separation = numeric(),
Non.Decision = numeric(),
Bias = numeric(),
Drift = numeric(),
Trial.Type = character(),
SubID = character(),
Age = character())
sub.pars$Trial.Type <- as.character(sub.pars$Trial.Type)
sub.pars$SubID <- as.character(sub.pars$SubID)
sub.pars$Age <- as.character(sub.pars$Age)
temp.pars <- sub.pars
df$resp <- as.character(df$resp)
#this takes a while to run, but estimating parameters for each subject
#Note that this is with excluded reaction time data, but it's possible that we shouldn't be excluding any rts...
# df %<>%
#   dplyr::filter(q > 0, na.rm = TRUE)
subs <- unique(df$sub_id)
for (j in 1:length(subs)) {
sid <- as.character(subs[j])
for (i in 1:length(trialtypes)) {
ttype <- as.character(trialtypes[i])
dat <- as.data.frame(subset(df, trial_type == ttype & sub_id == sid))
opt <- optim(c(1, .1, .1, 1), wiener_deviance,
dat=dplyr::select(dat, c(q, resp)), method="Nelder-Mead")
pars <- c(opt$par, ttype, sid, dat$agesplit[1])
temp.pars[i,] <- pars
}
sub.pars <- rbind(temp.pars, sub.pars)
}
sub.pars$Separation <- as.numeric(sub.pars$Separation)
sub.pars$Non.Decision <- as.numeric(sub.pars$Non.Decision)
sub.pars$Bias <- as.numeric(sub.pars$Bias)
sub.pars$Drift <- as.numeric(sub.pars$Drift)
sub.pars <- select(sub.pars, -Age) %>%
rename(sub_id = SubID) %>%
left_join(df %>%
group_by(sub_id) %>%
distinct %>%
select(sub_id, age_round, agesplit)) %>%
gather(Param, Value, Separation:Drift)
sub.pars.ms <- sub.pars %>%
group_by(agesplit) %>%
mutate(Age = mean(age_round)) %>%
group_by(agesplit, Age, Trial.Type, Param) %>%
multi_boot_standard("Value", na.rm = TRUE)
sep_lm <- summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
sep_lm
summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Drift")))
summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
bias_lm
sep_lm <- summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
nd_lm <- summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
bias_lm <- summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
drift_lm <- summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Drift")))
bias_lm
sep_lm
nd_lm
drift_lm
nd_lm
bias_lm
bias_lm
drift_lm
nd_lm
setwd("~/Documents/Projects/SI_tablet/paper/SI_tablet")
rm(list=ls())
knitr::opts_chunk$set(fig.width=3, fig.height=3, fig.crop = F, fig.pos = "tb", fig.path='figs/',
echo=F, warning=F, cache=TRUE, message=F, sanitize = T)
?facet_grid
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(reshape)
# library(plyr)
library(lme4)
library(dplyr)
library(stringr)
library(tidyr)
# library(markdown)
library(directlabels)
library(magrittr)
# library(bootstrap)
library(RCurl)
library(langcog)
# library(RColorBrewer)
library(diptest)
library(RWiener)
# library(ppcor)
theme_set(theme_bw())
?facet_grid
levels(df$agesplit)
rm(list=ls())
knitr::opts_chunk$set(fig.width=3, fig.height=3, fig.crop = F, fig.pos = "tb", fig.path='figs/',
echo=F, warning=F, cache=TRUE, message=F, sanitize = T)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(reshape)
# library(plyr)
library(lme4)
library(dplyr)
library(stringr)
library(tidyr)
# library(markdown)
library(directlabels)
library(magrittr)
# library(bootstrap)
library(RCurl)
library(langcog)
# library(RColorBrewer)
library(diptest)
library(RWiener)
# library(ppcor)
theme_set(theme_bw())
df <- read.csv("tmp.csv")
num_english <- df %>%
filter(english < 0.75)%>%
select(sub_id)%>%
distinct()%>%
summarise(n = n())
num_subjects <- df %>%
select(sub_id)%>%
distinct()
df %<>%
dplyr::mutate(age = as.numeric(age))%>%
dplyr::mutate(resp = factor(correct, levels=c("Y","N"), labels=c("upper","lower")),
q = rt/1000)%>%
dplyr::filter(selection_type != "someall" &
selection_type != "allall" &
selection_type != "allallall" &
selection_type != "allsome" &
selection_type != "somesome", na.rm=TRUE) %>% #this is filtering out the strange repeats
dplyr::filter(english >= 0.75, na.rm=TRUE) %>% # excluding less than 75% english exposure
dplyr::filter(english != "NA", na.rm=TRUE)%>% #avoiding the missing value that snuck back in
dplyr::mutate(age_round = round(age, digits = 2))%>% #for easier grouping
dplyr::mutate(agesplit = cut(age_round, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5+ years")))%>%
dplyr::filter(agesplit != "NA", na.rm = TRUE)
#for computing means
df$correct %<>%
str_replace("Y", 1)%>%
str_replace("N", 0)
df %<>%
dplyr::mutate(correct = as.numeric(correct))
#renaming for better graphs at the start
df$trial_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
df$selection_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
levels(df$agesplit)
t_tests <- aggregate(correct ~ trial_type + agesplit +  sub_id, data=df, mean)
setwd("~/Documents/Projects/SI_tablet/paper/SI_tablet")
setwd("~/Documents/Projects/SI_tablet/paper/SI_tablet")
rm(list=ls())
knitr::opts_chunk$set(fig.width=3, fig.height=3, fig.crop = F, fig.pos = "tb", fig.path='figs/',
echo=F, warning=F, cache=TRUE, message=F, sanitize = T)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(reshape)
# library(plyr)
library(lme4)
library(dplyr)
library(stringr)
library(tidyr)
# library(markdown)
library(directlabels)
library(magrittr)
# library(bootstrap)
library(RCurl)
library(langcog)
# library(RColorBrewer)
library(diptest)
library(RWiener)
# library(ppcor)
theme_set(theme_bw())
# Exclusions
df1 <-  subset(df, sub_id != "11716_14" & sub_id != "11316_2"
& sub_id != "121815_7" & sub_id != "1616_6"
& sub_id != "TM001" & sub_id != "TM003"
& sub_id != "TM004" & sub_id != "12416_9"
& sub_id!= "TM011") #excluded due to consent, low number of trials, and parental interference
#opaque missing data issue
df <- df1
#for figuring out percentage of trials lost due to RT exclusion
pre_cut <- df
# qplot(rt, data = df)
#There are some really crazy rts - exclude everything above 15s
df$clean.rt <- df$rt
df$clean.rt[df$rt > 15000] <- NA
mlog <- mean(log(df$clean.rt), na.rm=TRUE)
sdlog <- sd(log(df$clean.rt), na.rm=TRUE)
# qplot(clean.rt, data=df)
# qplot(log(clean.rt),
#       fill = log(clean.rt) > mlog + 3*sdlog | log(clean.rt) < mlog - 3*sdlog,
#       data = df)
#Assign "NAs" to clean rts 3 sds outside of log of mean rt
df$clean.rt[log(df$clean.rt) > mlog + 3*sdlog |
log(df$clean.rt) < mlog - 3*sdlog] <- NA
#filter df to exclude NAs (RT cleaned)
df %<>%
filter(clean.rt != "NA")
#how much data do we lose in this data cleaning?
total_loss <- as.numeric(nrow(pre_cut) - nrow(df))
percentage <- as.numeric((total_loss/nrow(df))*100)
trialtypes = c("All", "Some", "None")
sub.pars.high <- data.frame(Separation = numeric(),
Non.Decision = numeric(),
Bias = numeric(),
Drift = numeric(),
Trial.Type = character(),
SubID = character(),
Age = character())
sub.pars.high$Trial.Type <- as.character(sub.pars.high$Trial.Type)
sub.pars.high$SubID <- as.character(sub.pars.high$SubID)
sub.pars.high$Age <- as.character(sub.pars.high$Age)
temp.pars.high <- sub.pars.high
df <- read.csv("tmp_si.csv")
num_english <- df %>%
filter(english < 0.75)%>%
select(sub_id)%>%
distinct()%>%
summarise(n = n())
num_subjects <- df %>%
select(sub_id)%>%
distinct()
df %<>%
dplyr::mutate(age = as.numeric(age))%>%
dplyr::mutate(resp = factor(correct, levels=c("Y","N"), labels=c("upper","lower")),
q = rt/1000)%>%
dplyr::filter(selection_type != "someall" &
selection_type != "allall" &
selection_type != "allallall" &
selection_type != "allsome" &
selection_type != "somesome", na.rm=TRUE) %>% #this is filtering out the strange repeats
dplyr::filter(english >= 0.75, na.rm=TRUE) %>% # excluding less than 75% english exposure
dplyr::filter(english != "NA", na.rm=TRUE)%>% #avoiding the missing value that snuck back in
dplyr::mutate(age_round = round(age, digits = 2))%>% #for easier grouping
dplyr::mutate(agesplit = cut(age_round, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>%
dplyr::filter(agesplit != "NA", na.rm = TRUE)
#for computing means
df$correct %<>%
str_replace("Y", 1)%>%
str_replace("N", 0)
df %<>%
dplyr::mutate(correct = as.numeric(correct))
#renaming for better graphs at the start
df$trial_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
df$selection_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
# Exclusions
df1 <-  subset(df, sub_id != "11716_14" & sub_id != "11316_2"
& sub_id != "121815_7" & sub_id != "1616_6"
& sub_id != "TM001" & sub_id != "TM003"
& sub_id != "TM004" & sub_id != "12416_9"
& sub_id!= "TM011") #excluded due to consent, low number of trials, and parental interference
#opaque missing data issue
df <- df1
#for figuring out percentage of trials lost due to RT exclusion
pre_cut <- df
# qplot(rt, data = df)
#There are some really crazy rts - exclude everything above 15s
df$clean.rt <- df$rt
df$clean.rt[df$rt > 15000] <- NA
mlog <- mean(log(df$clean.rt), na.rm=TRUE)
sdlog <- sd(log(df$clean.rt), na.rm=TRUE)
# qplot(clean.rt, data=df)
# qplot(log(clean.rt),
#       fill = log(clean.rt) > mlog + 3*sdlog | log(clean.rt) < mlog - 3*sdlog,
#       data = df)
#Assign "NAs" to clean rts 3 sds outside of log of mean rt
df$clean.rt[log(df$clean.rt) > mlog + 3*sdlog |
log(df$clean.rt) < mlog - 3*sdlog] <- NA
#filter df to exclude NAs (RT cleaned)
df %<>%
filter(clean.rt != "NA")
#how much data do we lose in this data cleaning?
total_loss <- as.numeric(nrow(pre_cut) - nrow(df))
percentage <- as.numeric((total_loss/nrow(df))*100)
trialtypes = c("All", "Some", "None")
sub.pars.high <- data.frame(Separation = numeric(),
Non.Decision = numeric(),
Bias = numeric(),
Drift = numeric(),
Trial.Type = character(),
SubID = character(),
Age = character())
sub.pars.high$Trial.Type <- as.character(sub.pars.high$Trial.Type)
sub.pars.high$SubID <- as.character(sub.pars.high$SubID)
sub.pars.high$Age <- as.character(sub.pars.high$Age)
temp.pars.high <- sub.pars.high
sub.pars.low <- data.frame(Separation = numeric(),
Non.Decision = numeric(),
Bias = numeric(),
Drift = numeric(),
Trial.Type = character(),
SubID = character(),
Age = character())
sub.pars.low$Trial.Type <- as.character(sub.pars.low$Trial.Type)
sub.pars.low$SubID <- as.character(sub.pars.low$SubID)
sub.pars.low$Age <- as.character(sub.pars.low$Age)
temp.pars.low <- sub.pars.low
df$resp <- as.character(df$resp)
param.high <- df %>%
filter(accuracy == "high")
param.low <- df %>%
filter(accuracy == "low")
subs.high <- unique(param.high$sub_id)
subs.low <- unique(param.low$sub_id)
first estimate params for high accuracy kids
for (j in 1:length(subs)) {
sid <- as.character(subs[j])
for (i in 1:length(trialtypes)) {
ttype <- as.character(trialtypes[i])
dat <- as.data.frame(subset(df, trial_type == ttype & sub_id == sid))
opt <- optim(c(1, .1, .1, 1), wiener_deviance,
dat=dplyr::select(dat, c(q, resp)), method="Nelder-Mead")
pars <- c(opt$par, ttype, sid, dat$agesplit[1])
temp.pars.high[i,] <- pars
}
sub.pars.high <- rbind(temp.pars.high, sub.pars.high)
}
for (j in 1:length(subs.high)) {
sid <- as.character(subs.high[j])
for (i in 1:length(trialtypes)) {
ttype <- as.character(trialtypes[i])
dat <- as.data.frame(subset(df, trial_type == ttype & sub_id == sid))
opt <- optim(c(1, .1, .1, 1), wiener_deviance,
dat=dplyr::select(dat, c(q, resp)), method="Nelder-Mead")
pars <- c(opt$par, ttype, sid, dat$agesplit[1])
temp.pars.high[i,] <- pars
}
sub.pars.high <- rbind(temp.pars.high, sub.pars.high)
}
for (j in 1:length(subs.low)) {
sid <- as.character(subs.low[j])
for (i in 1:length(trialtypes)) {
ttype <- as.character(trialtypes[i])
dat <- as.data.frame(subset(param.low, trial_type == ttype & sub_id == sid))
opt <- optim(c(1, .1, .1, 1), wiener_deviance,
dat=dplyr::select(dat, c(q, resp)), method="Nelder-Mead")
pars <- c(opt$par, ttype, sid, dat$agesplit[1])
temp.pars.low[i,] <- pars
}
sub.pars.low <- rbind(temp.pars.low, sub.pars.low)
}
sub.pars <- rbind(sub.pars.low, sub.pars.high)
sub.pars$Separation <- as.numeric(sub.pars$Separation)
sub.pars$Non.Decision <- as.numeric(sub.pars$Non.Decision)
sub.pars$Bias <- as.numeric(sub.pars$Bias)
sub.pars$Drift <- as.numeric(sub.pars$Drift)
sub.pars <- select(sub.pars, -Age) %>%
rename(sub_id = SubID) %>%
left_join(df %>%
group_by(sub_id) %>%
distinct %>%
select(sub_id, age_round, accuracy)) %>%
gather(Param, Value, Separation:Drift)
sub.pars.ms <- sub.pars %>%
group_by(accuracy) %>%
mutate(Age = mean(age_round)) %>%
group_by(accuracy, Trial.Type, Param) %>%
multi_boot_standard("Value", na.rm = TRUE)
quartz()
ggplot(sub.pars.ms, aes(x=accuracy, y=mean, color=Trial.Type)) +
geom_point(size = 1.2, position=position_dodge(.05)) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position=position_dodge(.05)) +
geom_line(aes(colour = Trial.Type, group=Trial.Type)) +
facet_wrap(~Param, scales="free", ncol = 4) +
theme_bw(base_size = 7.7) +
theme(axis.text.x = element_text(size = 7),
axis.title.x = element_text(size = 7.5),
axis.title.y = element_text(size = 7.5),
axis.text.y = element_text(size = 7),
legend.text = element_text(size = 6),
legend.title = element_text(size = 6.5)) +
langcog::scale_color_solarized(guide_legend(title="Trial Type")) +
ylab("Mean") + xlab("Accuracy")
summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
summary(lmer(Value ~ age_round * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
sep_lm <- summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
summary(lmer(Value ~ accuracy* Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Drift")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
summary(lmer(Value ~ accuracy* Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Drift")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
?lmer
head(sub.pars)
summary(lmer(Value ~ accuracy * Trial.Type * age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
bias_lm <- summary(lmer(Value ~ accuracy * Trial.Type * age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
bias_lm
bias_lm
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
summary(lmer(Value ~ accuracy * Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
nd_lm_age <- summary(lmer(Value ~ accuracy * Trial.Type *age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
nd_lm_age
summary(lmer(Value ~ accuracy* Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Drift")))
bias_lm <- summary(lmer(Value ~ accuracy * Trial.Type * age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
bias_lm_age <- summary(lmer(Value ~ accuracy * Trial.Type * age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
bias_lm <- summary(lmer(Value ~ accuracy* Trial.Type + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
bias_lm
bias_lm_age
bias_lmage <- summary(lmer(Value ~ accuracy * Trial.Type * age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Bias")))
drift_lmage <-summary(lmer(Value ~ accuracy* Trial.Type *age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Drift")))
drift_lmage
nd_lm_age <- summary(lmer(Value ~ accuracy * Trial.Type *age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Non.Decision")))
sep_lmage <- summary(lmer(Value ~ accuracy* Trial.Type *age_round + (1 | sub_id),
data = filter(sub.pars, Param=="Separation")))
sep_lmage
bias_lmage
