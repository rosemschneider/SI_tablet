theme(axis.text.x = element_text(angle=90, hjust = 1,vjust=.5, size=8),
axis.title.x = element_text(vjust=-.5),
panel.grid = element_blank())
ggplot(data = d_phon, x = agesplit, y=prop) +
geom_histogram(stat="identity", position = "dodge") +
ylab("Proportion") +
xlab("Word") +
scale_fill_brewer(palette="Set1") +
theme_bw(base_size=12) +
theme(axis.text.x = element_text(angle=90, hjust = 1,vjust=.5, size=8),
axis.title.x = element_text(vjust=-.5),
panel.grid = element_blank())
head(d_phon)
ggplot(data = d_phon, x = word_standard, y=prop, fill=agesplit, group = agesplit) +
geom_histogram(stat="identity", position = "dodge") +
ylab("Proportion") +
xlab("Word") +
scale_fill_brewer(palette="Set1") +
theme_bw(base_size=12) +
theme(axis.text.x = element_text(angle=90, hjust = 1,vjust=.5, size=8),
axis.title.x = element_text(vjust=-.5),
panel.grid = element_blank())
ggplot(data = d_phon, aes(x=reorder(word_standard, prop), y=prop, fill=agesplit)) +
geom_histogram(stat="identity", position = "dodge") +
scale_fill_brewer(palette="Set1") +
theme_bw(base_size=12) +
theme(axis.text.x = element_text(angle=90, hjust = 1,vjust=.5, size=8),
axis.title.x = element_text(vjust=-.5),
panel.grid = element_blank())
d_phon <- d %>%
filter(word_standard == "Ball" | word_standard == "Baba" | word_standard == "Bye" | word_standard == "Bottle" |
word_standard == "Dog" | word_standard == "Cat" | word_standard == "Hi" | word_standard == "No" |
word_standard == "Milk" | word_standard == "Kitty") %>%
group_by(agesplit, word_standard, word_original)%>%
summarise(n = n())%>%
group_by(word_standard) %>%
mutate(prop = n/sum(n))
ggplot(data = d_phon, aes(x=reorder(word_standard, prop), y=prop, fill=agesplit)) +
geom_histogram(stat="identity", position = "dodge") +
scale_fill_brewer(palette="Set1") +
theme_bw(base_size=12) +
theme(axis.text.x = element_text(angle=90, hjust = 1,vjust=.5, size=8),
axis.title.x = element_text(vjust=-.5),
panel.grid = element_blank())
setwd("~/Documents/firstword/analysis")
install.packages("wordbankr")
setwd("~/Documents/Projects/FW_extended/analysis")
setwd("~/Documents/Projects/FW_extended/analysis")
library(knitr)
opts_chunk$set(cache=TRUE, message=FALSE, warning=FALSE)
rm(list=ls())
library(ggplot2)
library(reshape2)
library(entropy)
library(pscl)
library(dplyr)
library(stringr)
library(tidyr)
library(markdown)
library(directlabels)
library(magrittr)
library(bootstrap)
library(RMySQL)
library(RCurl)
library(RColorBrewer)
library(wordbankr)
library(langcog)
theme_set(theme_bw())
df_turk=read.csv("../data/FW_TurkData.csv") #Turk data
df_cdm=read.csv("../data/CDMlangsurvey_analysis.csv") #CDM data
df_info=read.csv("../data/FW_childesinfo.csv") #Childesinfo data
df_mv <- read.csv("../data/MVapp.csv")
df_cdi <- read.csv("../data/mbcdi.csv")
english_wg_admins <- get_administration_data("English", "WG")
all_admins <- get_administration_data()
english_items <- get_item_data("English", "WG")
english_instrument <- get_instrument_data(instrument_language = "English",
instrument_form = "WG"))
english_instrument <- get_instrument_data(instrument_language = "English",
instrument_form = "WG")
View(english_instrument)
head(english_wg_admins)
head(english_items)
View(english_instrument)
head(english_wg_admins)
names(english_wg_admins$sex)
View(english_wg_admins)
admin.data <- english_wg_admins %>%
mutate(sex = factor(sex,levels=c("F","M"),
labels=c("Female","Male")))%>%
as.data.frame
View(admin.data)
english_wg_admins <- get_administration_data("English", "WG")
View(english_wg_admins)
english_wg_admins <- get_administration_data()
View(english_wg_admins)
head(english_wg_admins)
english_wg_admins <- get_administration_data()%>%
filter(language == "English" & form == "WG", na.rm=TRUE)
head(english_wg_admins)
setwd("~/Documents/Projects/SI_tablet/paper/SI_tablet")
rm(list=ls())
knitr::opts_chunk$set(fig.width=3, fig.height=3, fig.crop = F, fig.pos = "tb", fig.path='figs/',
echo=F, warning=F, cache=TRUE, message=F, sanitize = T)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(reshape)
library(lme4)
library(dplyr)
library(stringr)
library(tidyr)
library(directlabels)
library(magrittr)
library(RCurl)
library(langcog)
library(diptest)
library(RWiener)
theme_set(theme_bw())
df <- read.csv("tmp_si.csv")
num_english <- df %>%
filter(english < 0.75)%>%
select(sub_id)%>%
distinct()%>%
summarise(n = n())
num_subjects <- df %>%
select(sub_id)%>%
distinct()
df %<>%
dplyr::mutate(age = as.numeric(age))%>%
dplyr::mutate(resp = factor(correct, levels=c("Y","N"), labels=c("upper","lower")),
q = rt/1000)%>%
dplyr::filter(selection_type != "someall" &
selection_type != "allall" &
selection_type != "allallall" &
selection_type != "allsome" &
selection_type != "somesome", na.rm=TRUE) %>% #this is filtering out the strange repeats
dplyr::filter(english >= 0.75, na.rm=TRUE) %>% # excluding less than 75% english exposure
dplyr::filter(english != "NA", na.rm=TRUE)%>% #avoiding the missing value that snuck back in
dplyr::mutate(age_round = round(age, digits = 2))%>% #for easier grouping
dplyr::mutate(agesplit = cut(age_round, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>%
dplyr::filter(agesplit != "NA", na.rm = TRUE)
#for computing means
df$correct %<>%
str_replace("Y", 1)%>%
str_replace("N", 0)
df %<>%
dplyr::mutate(correct = as.numeric(correct))
#renaming for better graphs at the start
df$trial_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
df$selection_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
df <- read.csv("tmp_si.csv")
d_bilingual <- df %>%
filter(english >= 0.75)
num_bilingual <- d_bilingual %>%
dplyr::mutate(agesplit = cut(age_round, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>%
group_by(agesplit)%>%
summarise(n = n())
num_bilingual <- d_bilingual %>%
dplyr::mutate(agesplit = cut(age, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>%
group_by(agesplit)%>%
summarise(n = n())
View(num_bilingual)
num_bilingual <- d_bilingual %>%
distinct(sub_id)%>%
dplyr::mutate(agesplit = cut(age, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>%
group_by(agesplit)%>%
summarise(n = n())
View(num_bilingual)
d_bilingual <- df %>%
filter(english >= 0.75, na.rm=TRUE)
d_bilingual <- df %>%
filter(english < 0.75, na.rm=TRUE)
d_bilingual <- df %>%
filter(english <= 0.75, na.rm=TRUE)
num_bilingual <- d_bilingual %>%
distinct(sub_id)%>%
dplyr::mutate(agesplit = cut(age, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>%
group_by(agesplit)%>%
summarise(n = n())
View(num_bilingual)
setwd("~/Documents/Projects/SI_tablet/paper/SI_tablet")
rm(list=ls())
knitr::opts_chunk$set(fig.width=3, fig.height=3, fig.crop = F, fig.pos = "tb", fig.path='figs/',
echo=F, warning=F, cache=TRUE, message=F, sanitize = T)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(reshape)
library(lme4)
library(dplyr)
library(stringr)
library(tidyr)
library(directlabels)
library(magrittr)
library(RCurl)
library(langcog)
library(diptest)
library(RWiener)
theme_set(theme_bw())
df <- read.csv("tmp_si.csv")
num_english <- df %>%
filter(english < 0.75)%>%
select(sub_id)%>%
distinct()%>%
summarise(n = n())
num_subjects <- df %>%
select(sub_id)%>%
distinct()
df %<>%
dplyr::mutate(age = as.numeric(age))%>%
dplyr::mutate(resp = factor(correct, levels=c("Y","N"), labels=c("upper","lower")),
q = rt/1000)%>%
dplyr::filter(selection_type != "someall" &
selection_type != "allall" &
selection_type != "allallall" &
selection_type != "allsome" &
selection_type != "somesome", na.rm=TRUE) %>% #this is filtering out the strange repeats
dplyr::filter(english >= 0.75, na.rm=TRUE) %>% # excluding less than 75% english exposure
dplyr::filter(english != "NA", na.rm=TRUE)%>% #avoiding the missing value that snuck back in
dplyr::mutate(age_round = round(age, digits = 2))%>% #for easier grouping
dplyr::mutate(agesplit = cut(age_round, breaks=c(3, 3.5, 4, 4.5, 5, 6.5)),
agesplit = factor(agesplit,
labels=c("3-3.5 years", "3.5-4 years",
"4-4.5 years", "4.5-5 years",
"5-6.5 years")))%>%
dplyr::filter(agesplit != "NA", na.rm = TRUE)
#for computing means
df$correct %<>%
str_replace("Y", 1)%>%
str_replace("N", 0)
df %<>%
dplyr::mutate(correct = as.numeric(correct))
#renaming for better graphs at the start
df$trial_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
df$selection_type %<>%
str_replace("all", "All")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
# Exclusions
df1 <-  subset(df, sub_id != "11716_14" & sub_id != "11316_2"
& sub_id != "121815_7" & sub_id != "1616_6"
& sub_id != "TM001" & sub_id != "TM003"
& sub_id != "TM004" & sub_id != "12416_9"
& sub_id!= "TM011") #excluded due to consent, low number of trials, and parental interference
#opaque missing data issue
df <- df1
#for figuring out percentage of trials lost due to RT exclusion
pre_cut <- df
# qplot(rt, data = df)
#There are some really crazy rts - exclude everything above 15s
df$clean.rt <- df$rt
df$clean.rt[df$rt > 15000] <- NA
mlog <- mean(log(df$clean.rt), na.rm=TRUE)
sdlog <- sd(log(df$clean.rt), na.rm=TRUE)
#Assign "NAs" to clean rts 3 sds outside of log of mean rt
df$clean.rt[log(df$clean.rt) > mlog + 3*sdlog |
log(df$clean.rt) < mlog - 3*sdlog] <- NA
#how much data do we lose in this data cleaning?
outlier <- as.numeric(sum(is.na(df$clean.rt) == TRUE))
total_loss <- outlier
percentage <- as.numeric((total_loss/nrow(df))*100)
num_gender <- df%>%
select(sub_id, sex)%>%
distinct()%>%
group_by(sex)%>%
summarise(n=n())
f <- num_gender %>%
filter(sex == "F")
m <- num_gender %>%
filter(sex == "M")
num_trials <- df %>%
group_by(sub_id, agesplit)%>%
summarise(n = n())
num_kids <- df %>%
dplyr::select(sub_id, agesplit, age) %>%
dplyr:: distinct()%>%
dplyr::group_by(agesplit)%>%
dplyr::summarize(n=n(), mean=mean(age), sd=sd(age), median=median(age))%>%
dplyr::mutate(total.n = sum(n))
num_young3s <- num_kids %>%
filter(agesplit == "3-3.5 years")
num_old3s <- num_kids %>%
filter(agesplit == "3.5-4 years")
num_young4s <- num_kids %>%
filter(agesplit == "4-4.5 years")
num_old4s <- num_kids %>%
filter(agesplit == "4.5-5 years")
num_5s <- num_kids %>%
filter(agesplit == "5-6.5 years")
sstats <- df %>%
dplyr::group_by(agesplit)%>%
dplyr::summarise(mean = mean(age), median = median(age), sd = sd(age))
s_young3 <- sstats %>%
filter(agesplit == "3-3.5 years")
s_old3 <- sstats %>%
filter(agesplit == "3.5-4 years")
s_young4 <- sstats %>%
filter(agesplit == "4-4.5 years")
s_old4 <- sstats %>%
filter(agesplit == "4.5-5 years")
s_5s <- sstats %>%
filter(agesplit == "5-6.5 years")
ms <- df %>%
group_by(trial_type, agesplit)%>%
multi_boot_standard("correct", na.rm=TRUE)
ms$trial_type %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
levels(ms$trial_type)
ggplot(data = ms,
aes(x=trial_type, y=mean, fill=type, alpha = agesplit)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .4,
show.legend = FALSE,
position=position_dodge(.9)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size = 7) +
scale_fill_solarized(name = "Age") +
scale_alpha_manual(values=c(.5,.625,.75,1)) +
theme(axis.title.x = element_text(size=7),
legend.position=c(.8,.8),
legend.key.size=unit(.2, "cm"),
axis.title.y  = element_text(size=7),
legend.title=element_text(size=5),
legend.text=element_text(size=5),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
ggplot(data = ms,
aes(x=trial_type, y=mean, fill=trial_type, alpha = agesplit)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .4,
show.legend = FALSE,
position=position_dodge(.9)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size = 7) +
scale_fill_solarized(name = "Age") +
scale_alpha_manual(values=c(.5,.625,.75,1)) +
theme(axis.title.x = element_text(size=7),
legend.position=c(.8,.8),
legend.key.size=unit(.2, "cm"),
axis.title.y  = element_text(size=7),
legend.title=element_text(size=5),
legend.text=element_text(size=5),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
ggplot(data = ms,
aes(x=trial_type, y=mean, fill=trial_type, alpha = agesplit)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .4,
show.legend = FALSE,
position=position_dodge(.9)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size = 7) +
scale_fill_solarized(name = "Age") +
scale_alpha_manual(values=c(.4, .5,.625,.75,1)) +
theme(axis.title.x = element_text(size=7),
legend.position=c(.8,.8),
legend.key.size=unit(.2, "cm"),
axis.title.y  = element_text(size=7),
legend.title=element_text(size=5),
legend.text=element_text(size=5),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
ggplot(data = ms,
aes(x=trial_type, y=mean, fill=trial_type, alpha = agesplit)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .4,
show.legend = FALSE,
position=position_dodge(.9)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size = 7) +
scale_fill_solarized(name = "Age") +
scale_alpha_manual(values=c(.4, .5,.625,.75,1)) +
theme(axis.title.x = element_text(size=7),
legend.position=c(.8,.8),
legend.key.size=unit(.2, "cm"),
axis.title.y  = element_text(size=7),
legend.title=element_text(size=5),
legend.text=element_text(size=5),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
guides(fill = FALSE)
?guides
ms %<>%
rename(Age = agesplit)
ggplot(data = ms,
aes(x=trial_type, y=mean, fill=trial_type, alpha = Age)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .4,
show.legend = FALSE,
position=position_dodge(.9)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size = 7) +
scale_fill_solarized(name = "Age") +
scale_alpha_manual(values=c(.4, .5,.625,.75,1)) +
theme(axis.title.x = element_text(size=7),
legend.position=c(.8,.8),
legend.key.size=unit(.2, "cm"),
axis.title.y  = element_text(size=7),
legend.title=element_text(size=5),
legend.text=element_text(size=5),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
guides(fill = FALSE)
ms <- df %>%
group_by(sub_id, trial_type) %>%
multi_boot_standard("correct", na.rm=TRUE)
diptest_all <- diptest::dip.test(filter(ms, trial_type == "All")$mean)
diptest_some <- diptest::dip.test(filter(ms, trial_type == "Some")$mean)
diptest_none <- diptest::dip.test(filter(ms, trial_type == "None")$mean)
ms <- df %>%
group_by(sub_id, trial_type) %>%
summarise(correct = sum(correct))
ggplot(ms, aes(x = correct, fill=trial_type)) +
geom_histogram(binwidth = 1) +
theme_bw(base_size = 7) +
xlab("Total correct responses per participant") +
ylab("Frequency") +
facet_wrap(~trial_type) +
theme(legend.position="none") +
theme(axis.title.x = element_text(size = 7), axis.title.y = element_text(size = 7)) +
scale_x_continuous(breaks = c(0,2,4,6,8,10)) +
langcog::scale_fill_solarized()
num_trials <- df %>%
group_by(sub_id, trial_type)%>%
summarise(n = n())
View(num_trials)
trialtypes <- c("all", "some", "none")
#For easier to read graph
df$resp1 <- df$resp %>%
str_replace("lower", "Incorrect")%>%
str_replace("upper", "Correct")
#Stats for median lines
rt_stats <- df %>%
group_by(agesplit, trial_type, resp1)%>%
summarise(mean=mean(rt), median = median(rt))%>%
mutate(m = median/1000)
m_upper <- rt_stats %>%
filter(resp1 == "Correct")
m_lower <- rt_stats %>%
filter(resp1 == "Incorrect")
#for easier to read graph
df$resp1 <- factor(df$resp1, levels=c("Incorrect", "Correct"))
# quartz()
ggplot(df, aes(x=q)) +
geom_density(aes(weight = sum(resp1=="Correct")/length(resp1), fill = resp1), alpha=0.5) +
facet_grid(agesplit ~ trial_type) +
scale_fill_solarized(name = "Response") +
xlab("Response time (s)") +
ylab("Density of responses") +
xlim(c(0,10)) +
theme_bw(base_size = 7) +
theme(axis.title.x = element_text(size=7),
axis.title.y  = element_text(size=7),
legend.key.size=unit(.5, "cm"),
legend.title=element_text(size=6.5),
legend.text=element_text(size=6))
warnings()
lm <- summary(glmer(correct ~ age * trial_type +
(trial_type | sub_id),
family = "binomial", data = df, control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5))))
install.packages('RWeiner')
install.packages('RWiener')
